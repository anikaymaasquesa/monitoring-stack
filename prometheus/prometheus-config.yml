# my global config
global:
  scrape_interval:     1m # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 1m # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets: 
      - prometheus:9090
    
    # alternative nomenclature:
    #
    # - targets: ['prometheus:9090']    
    # - targets: 
    #   - 'prometheus:9090'

    # Only works on Docker Desktop for Windows
  - job_name: 'docker'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets:
      - host.docker.internal:9323

  # Scrape cadvisor to collect container metrics
  - job_name: cadvisor
    scrape_interval: 30s
    static_configs:
    - targets:
      - cadvisor:8080

  - job_name: minio
    metrics_path: /minio/v2/metrics/cluster
    scrape_interval: 30s 
    scheme: http
    static_configs:
    - targets:
      - minio:9000

  - job_name: grafana
    scrape_interval: 30s 
    static_configs:
    - targets:
      - grafana:3000
  
  - job_name: promtail
    scrape_interval: 1m 
    static_configs:
    - targets:
      - promtail:9080

  - job_name: loki
    scrape_interval: 30s 
    dns_sd_configs:
      - names:
          - loki-read
          - loki-write
        type: A
        port: 3100

  - job_name: mimir
    static_configs:
      - targets: [ 'mimir-1:8080' ]
        labels:
          pod: 'mimir-1'
      - targets: [ 'mimir-2:8080' ]
        labels:
          pod: 'mimir-2'
      # - targets: [ 'mimir-3:8080' ]
      #   labels:
      #     pod: 'mimir-3'
  
  - job_name: minio-mimir
    metrics_path: /minio/v2/metrics/cluster
    scrape_interval: 30s 
    scheme: http
    static_configs:
    - targets:
      - minio-mimir:9000

remote_write:
  - url: http://load-balancer:9009/api/v1/push
# Add X-Scope-OrgID header so that Mimir knows what tenant the remote write data should be stored in.
# In this case, our tenant is "demo"
    headers:
      X-Scope-OrgID: demo