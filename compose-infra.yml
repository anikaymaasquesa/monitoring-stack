version: "3.9"

networks:
  default:
    name: monitoring-network

volumes:
  minio:
  mimir-1-data:
  mimir-2-data:
  minio-data:

services:
  minio:
    image: minio/minio
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki && \
        minio server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    environment:
      # the default
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    ports:
      - 9004:9000
      - 9006:9001
    volumes:
      - minio:/data
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
    #   interval: 15s
    #   timeout: 20s
    #   retries: 5
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
 
  loki-gateway:
    image: nginx
    container_name: loki-gateway
    volumes:
      - ./loki-nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100"
    depends_on:
      - loki-read
      - loki-write
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  loki-read:
    image: grafana/loki:2.7.4
    container_name: loki-read
    volumes:
      - ./loki:/etc/loki/
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "40000-40002:40000" # # makes the replicas available on ports 40000, 40001, 40002
      #cap_add:
      #  - SYS_PTRACE
      #security_opt:
      #  - apparmor=unconfined
    command: "-config.file=/etc/loki/loki-config.yml -target=read"

    restart: unless-stopped
    # deploy:
    #   mode: replicated
    #   replicas: 3
    depends_on:
      - minio

  loki-write:
    image: grafana/loki:2.7.4
    container_name: loki-write
    volumes:
      - ./loki:/etc/loki/
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "50000-50002:40000" # makes the replicas available on ports 50000, 50001, 50002
      # cap_add:
      #   - SYS_PTRACE
      # security_opt:
      #   - apparmor=unconfined
    command: "-config.file=/etc/loki/loki-config.yml -target=write"
    restart: unless-stopped
    # deploy:
    #   mode: replicated
    #   replicas: 3
    depends_on:
      - minio

  minio-mimir:
    image: minio/minio
    container_name: minio-mimir
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/mimir && \
        minio server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data
    ports:
      - 9014:9000
      - 9016:9001
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  load-balancer:
    image: nginx:latest
    container_name: mimir-load-balancer
    volumes:
      - ./mimir-nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      # - "mimir-3"
    ports:
      - 9009:9009
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  mimir-1:
    image: grafana/mimir:latest
    container_name: mimir-1
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio-mimir
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir.yaml
      - ./mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  mimir-2:
    image: grafana/mimir:latest
    container_name: mimir-2
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-2
    depends_on:
      - minio-mimir
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir.yaml
      - ./mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
