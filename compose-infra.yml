version: "3.9"

networks:
  default:
    name: monitoring-network

volumes:
  minio:

services:
  minio:
    image: minio/minio
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    environment:
      # the default
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    ports:
      - 9004:9000
      - 9006:9001
    volumes:
      - minio:/data
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
    #   interval: 15s
    #   timeout: 20s
    #   retries: 5
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

# * TODO check if this is necessary
#
#  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
#   # Loki would not have permissions to create the directories.
#   # Therefore the init container changes permissions of the mounted directory.
#   init:
#     image: grafana/loki
#     user: root
#     entrypoint:
#       - "chown"
#       - "10001:10001"
#       - "/loki"
#     volumes:
#       - ./loki:/loki
  
  loki-gateway:
    image: nginx
    container_name: loki-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100"
    depends_on:
    - loki-read

  loki-read:
    image: grafana/loki:2.7.4
    container_name: loki-read
    volumes:
      - ./loki:/etc/loki/
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "40000-40002:40000" # # makes the replicas available on ports 40000, 40001, 40002
      #cap_add:
      #  - SYS_PTRACE
      #security_opt:
      #  - apparmor=unconfined
    command: "-config.file=/etc/loki/loki-config.yml -target=read"

    restart: unless-stopped
    # deploy:
    #   mode: replicated
    #   replicas: 3
    depends_on:
    - loki-write

  loki-write:
    image: grafana/loki:2.7.4
    container_name: loki-write
    volumes:
      - ./loki:/etc/loki/
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "50000-50002:40000" # makes the replicas available on ports 50000, 50001, 50002
      # cap_add:
      #   - SYS_PTRACE
      # security_opt:
      #   - apparmor=unconfined
    command: "-config.file=/etc/loki/loki-config.yml -target=write"
    restart: unless-stopped
    # deploy:
    #   mode: replicated
    #   replicas: 3
    depends_on:
      - minio

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8081:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
    - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
    - cadvisor
    - loki-read
    ports:
      - "9090:9090"
    restart: unless-stopped
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  # additionaly it fails because the by the config defined path does not exist
  
  promtail:
    image: grafana/promtail:2.7.4
    container_name: promtail
    volumes:
      - ./promtail_logs:/var/log
      - ./promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      -  loki-gateway
    restart: unless-stopped
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    
